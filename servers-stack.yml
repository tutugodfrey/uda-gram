Description: UdaGram App Servers
Parameters:
  ProjectName:
    Description: Project to which Stack is being applied
    Type: String
  EnvironmentName:
    Description: Environment name to be used as prefixed to resources
    Type: String
  KeyName:
    Description: SSH key Name
    Type: String
  ImageId:
    Description: AMI Image Id for EC2 instance
    Type: String
  InstanceType:
    Description: The Capability of your EC2 instance
    Type: String
  LaunchTemplateVersionNumber:
    Description: Required version number for launch template use in auto scaling group
    Type: String
    Default: 1
Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Load Balancer SG
      GroupName: LoadBalancer-SG
      VpcId:
        Fn::ImportValue:
          !Sub "${ProjectName}-${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${EnvironmentName} LBSG
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Web App Security Group
      GroupName: !Sub ${ProjectName}-${EnvironmentName} Web Server SG 
      VpcId:
        Fn::ImportValue:
          !Sub "${ProjectName}-${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${EnvironmentName} Web Server SG
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref ImageId
      KeyName: !Ref KeyName
      InstanceType: !Ref InstanceType
      SecurityGroups:
      - Ref: WebServerSecGroup
      # BlockDeviceMappings:
      # - DeviceName: "/dev/sdk"
      #   Ebs:
      #     VolumeSize: '10'
      UserData:
        Fn::Base64: !Sub |
          #! /bin/bash
          yum update -y;
          amazon-linux-extras install -y lamp-mariadb10.2-php7.2 php7.2;
          yum install -y httpd mariadb-server;
          systemctl start httpd;
          systemctl enable httpd;
          chkconfig httpd on;

  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue:
          !Sub "${ProjectName}-${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: '1'
      MaxSize: '5'
      TargetGroupARNs:
      - Ref: WebAppTargetGroup
      HealthCheckGracePeriod: 60
      HealthCheckType: ELB
  
  WebAppLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: WebAppLaunchTemplate
      LaunchTemplateData:
        ImageId:
          Ref: ImageId
        KeyName:
          Ref: KeyName
        InstanceType:
          Ref: InstanceType
        SecurityGroupIds:
        - Ref: WebServerSecGroup
        # BlockDeviceMappings:
        # - DeviceName: "/dev/sdk"
        #   Ebs:
        #     VolumeSize: '10'
        UserData:
          Fn::Base64: !Sub |
            #! /bin/bash
            yum update -y;
            amazon-linux-extras install -y lamp-mariadb10.2-php7.2 php7.2;
            yum install -y httpd mariadb-server;
            systemctl start httpd;
            systemctl enable httpd;
            chkconfig httpd on;
  
  WebAppGroupWithLaunchTemplate:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue:
          !Sub "${ProjectName}-${EnvironmentName}-PRIV-NETS"
      LaunchTemplate:
        LaunchTemplateId: !Ref WebAppLaunchTemplate
        Version: !Ref LaunchTemplateVersionNumber
      MinSize: '1'
      MaxSize: '3'
      # TargetGroupARNs:
      # - Ref: WebAppTargetGroup
      HealthCheckGracePeriod: 60
      HealthCheckType: ELB


  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${ProjectName}-${EnvironmentName}-PUB1-SN"
      - Fn::ImportValue: !Sub "${ProjectName}-${EnvironmentName}-PUB2-SN"
      SecurityGroups:
      - Ref: LBSecGroup
  
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP
      
  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref 'WebAppTargetGroup'
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref 'Listener'
      Priority: 1

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${ProjectName}-${EnvironmentName}-VPCID"

Outputs:
  LoadBalancerDNS:
    Description: Dns to reach access our application
    Value: !GetAtt WebAppLB.DNSName